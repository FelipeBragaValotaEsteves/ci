name: CI + Docker Build

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Testes automatizados
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d app_test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: app_test_db

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci || npm install
      - run: node src/initDatabase.js
      - run: npx knex migrate:latest --env test
      - run: npm test

  docker:
    name: Build e Push Docker
    runs-on: ubuntu-latest
    needs: test  

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build da imagem
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/users-api:latest .

      - name: Push para Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/users-api:latest
